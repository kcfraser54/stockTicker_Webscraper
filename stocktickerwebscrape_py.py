# -*- coding: utf-8 -*-
"""stockTickerWebscrape.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OJ-K8V_vPSvRd9UfxDrcG2l4WqjaI21b
"""

#Description: This program scrapes stock tickers and their company name from a website

import requests
import pandas as pd
from bs4 import BeautifulSoup

#Create two empty lists for the company name and the company ticker/symbol 
company_name = []
company_ticker = []

URL = 'http://www.advfn.com/nyse/newyorkstockexchange.asp'
page = requests.get(URL)

soup = BeautifulSoup(page.text, 'html.parser')

odd_rows = soup.find_all('tr', attrs={'class':'ts0'})
even_rows = soup.find_all('tr', attrs={'class':'ts1'})

for i in odd_rows:
  row = i.find_all('td')
  company_name.append(row[0].text.strip()) #Company name 
  company_ticker.append(row[1].text.strip()) #ticker

for i in even_rows:
  row = i.find_all('td')
  company_name.append(row[0].text.strip()) #Company name 
  company_ticker.append(row[1].text.strip()) #ticker

#Create a function to scrape the data 
def scrape_stock_symbols(Letter):
  Letter = Letter.upper()

  URL = 'http://www.advfn.com/nyse/newyorkstockexchange.asp?companies='+Letter
  page = requests.get(URL)

  soup = BeautifulSoup(page.text, 'html.parser')

  odd_rows = soup.find_all('tr', attrs={'class':'ts0'})
  even_rows = soup.find_all('tr', attrs={'class':'ts1'})

  for i in odd_rows:
    row = i.find_all('td')
    company_name.append(row[0].text.strip()) #Company name 
    company_ticker.append(row[1].text.strip()) #ticker

  for i in even_rows:
    row = i.find_all('td')
    company_name.append(row[0].text.strip()) #Company name 
    company_ticker.append(row[1].text.strip()) #ticker


  return (company_name, company_ticker)

(temp_name, temp_ticker) = scrape_stock_symbols('b')
temp_name

#Get a list of every letter in the alphabet 
import string 
string.ascii_uppercase

#Loop through every letter in the alphabet to get all tickers and company names from the website
for char in string.ascii_uppercase:
  (temp_name, temp_ticker) = scrape_stock_symbols(char)

temp_ticker

#Create a dataFrame that contains the company name and company ticker
data = pd.DataFrame(columns=['company_name', 'company_ticker'])
data['company_name'] = temp_name
data['company_ticker'] = temp_ticker
data

#Clean the data 
data = data[data['company_name'] != '']
data